test_scanner1.c(2): <ID>
test_scanner1.c(2): <INT LIT>
test_scanner1.c(4): static
test_scanner1.c(4): extern
test_scanner1.c(4): void
test_scanner1.c(4): int
test_scanner1.c(5): if
test_scanner1.c(5): else
test_scanner1.c(5): while
test_scanner1.c(5): for
test_scanner1.c(5): continue
test_scanner1.c(5): break
test_scanner1.c(5): return
test_scanner1.c(7): ,
test_scanner1.c(7): ;
test_scanner1.c(7): (
test_scanner1.c(7): )
test_scanner1.c(7): {
test_scanner1.c(7): }
test_scanner1.c(7): *
test_scanner1.c(7): /
test_scanner1.c(7): +
test_scanner1.c(7): -
test_scanner1.c(7): =
test_scanner1.c(7): ||
test_scanner1.c(7): &&
test_scanner1.c(8): ==
test_scanner1.c(8): !=
test_scanner1.c(8): <
test_scanner1.c(8): >
test_scanner1.c(8): <=
test_scanner1.c(8): >=
test_scanner1.c(8): &
test_scanner1.c(8): !
